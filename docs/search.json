[
  {
    "objectID": "hw3_mycode_v5.html",
    "href": "hw3_mycode_v5.html",
    "title": "hw3_v5",
    "section": "",
    "text": "# hw3,  to bring in the data set\n\nload(\"hw2_list.rda\")\nhead(bp_list)\n\n$treatment\n              patient pre_bp post_bp diff_bp normal\nSubject_1   Subject_1    120     127      -7  FALSE\nSubject_2   Subject_2    151     145       6  FALSE\nSubject_3   Subject_3    125     135     -10  FALSE\nSubject_4   Subject_4    126     122       4  FALSE\nSubject_5   Subject_5    115     115       0   TRUE\nSubject_6   Subject_6    132     122      10  FALSE\nSubject_7   Subject_7    132     123       9  FALSE\nSubject_8   Subject_8    129     126       3  FALSE\nSubject_9   Subject_9    134     126       8  FALSE\nSubject_10 Subject_10    139     129      10  FALSE\nSubject_11 Subject_11    127     132      -5  FALSE\nSubject_12 Subject_12    122     146     -24  FALSE\nSubject_13 Subject_13    127     120       7  FALSE\nSubject_14 Subject_14    135     114      21   TRUE\nSubject_15 Subject_15    133     121      12  FALSE\nSubject_16 Subject_16    128     120       8  FALSE\nSubject_17 Subject_17    147     128      19  FALSE\nSubject_18 Subject_18    138     120      18  FALSE\nSubject_19 Subject_19    140     133       7  FALSE\nSubject_20 Subject_20    132     115      17   TRUE\n\n$placebo\n      patient pre_bp post_bp diff_bp normal\n1   Subject_1    138     105      33   TRUE\n2   Subject_2    135     136      -1  FALSE\n3   Subject_3    147     123      24  FALSE\n4   Subject_4    117     130     -13  FALSE\n5   Subject_5    152     134      18  FALSE\n6   Subject_6    134     143      -9  FALSE\n7   Subject_7    114     135     -21  FALSE\n8   Subject_8    121     139     -18  FALSE\n9   Subject_9    131     120      11  FALSE\n10 Subject_10    130     124       6  FALSE\n\n# add status col\nmy_list &lt;- bp_list\nmy_list$treatment$status &lt;- character(20)\nmy_list$placebo$status &lt;- character(10)\n\n\n\n\n\n# Task 1 (control flow practice)\n# use loop to fill in 'status' vector\nfor (i in 1:20) {\n  if (my_list$treatment$post_bp[i] &lt;=120) {\n    my_list$treatment$status[i] &lt;- \"optimal\"\n  } else if (my_list$treatment$post_bp[i] &lt;=130) {\n    my_list$treatment$status[i] &lt;- \"borderline\"\n  } else if (my_list$treatment$post_bp[i] &gt;130) {\n    my_list$treatment$status[i] &lt;- \"high\"\n  }\n}\n\n\n\n\n\n# use loop to fill in 'status' vector\n\nfor (i in 1:10) {\n  if (my_list$placebo$post_bp[i] &lt;=120) {\n    my_list$placebo$status[i] &lt;- \"optimal\"\n  } else if (my_list$placebo$post_bp[i] &lt;=130) {\n    my_list$placebo$status[i] &lt;- \"borderline\"\n  } else if (my_list$placebo$post_bp[i] &gt;130) {\n    my_list$placebo$status[i] &lt;- \"high\"\n  }\n}\n\n\n# show the list\nmy_list\n\n$treatment\n              patient pre_bp post_bp diff_bp normal     status\nSubject_1   Subject_1    120     127      -7  FALSE borderline\nSubject_2   Subject_2    151     145       6  FALSE       high\nSubject_3   Subject_3    125     135     -10  FALSE       high\nSubject_4   Subject_4    126     122       4  FALSE borderline\nSubject_5   Subject_5    115     115       0   TRUE    optimal\nSubject_6   Subject_6    132     122      10  FALSE borderline\nSubject_7   Subject_7    132     123       9  FALSE borderline\nSubject_8   Subject_8    129     126       3  FALSE borderline\nSubject_9   Subject_9    134     126       8  FALSE borderline\nSubject_10 Subject_10    139     129      10  FALSE borderline\nSubject_11 Subject_11    127     132      -5  FALSE       high\nSubject_12 Subject_12    122     146     -24  FALSE       high\nSubject_13 Subject_13    127     120       7  FALSE    optimal\nSubject_14 Subject_14    135     114      21   TRUE    optimal\nSubject_15 Subject_15    133     121      12  FALSE borderline\nSubject_16 Subject_16    128     120       8  FALSE    optimal\nSubject_17 Subject_17    147     128      19  FALSE borderline\nSubject_18 Subject_18    138     120      18  FALSE    optimal\nSubject_19 Subject_19    140     133       7  FALSE       high\nSubject_20 Subject_20    132     115      17   TRUE    optimal\n\n$placebo\n      patient pre_bp post_bp diff_bp normal     status\n1   Subject_1    138     105      33   TRUE    optimal\n2   Subject_2    135     136      -1  FALSE       high\n3   Subject_3    147     123      24  FALSE borderline\n4   Subject_4    117     130     -13  FALSE borderline\n5   Subject_5    152     134      18  FALSE       high\n6   Subject_6    134     143      -9  FALSE       high\n7   Subject_7    114     135     -21  FALSE       high\n8   Subject_8    121     139     -18  FALSE       high\n9   Subject_9    131     120      11  FALSE    optimal\n10 Subject_10    130     124       6  FALSE borderline\n\n\n\n\n\n\n\n\n\n# define the function\nprocess_statistics &lt;- function(df_list, stat = \"mean\") {\n  # ensure the input is a list with 2 data frames\n  if (!is.list(df_list) || length(df_list) != 2) {\n    stop(\"The input must be a list containing two data frames: treatment and placebo.\")\n  }\n\n  # Extract the data frames from the list\n  treatment_df &lt;- df_list[[1]]\n  placebo_df &lt;- df_list[[2]]\n  \n    # Ensure that both elements are data frames\n  if (!is.data.frame(treatment_df) || !is.data.frame(placebo_df)) {\n    stop(\"Both elements in the list must be data frames.\")\n  }\n  \n    # Use get() to dynamically retrieve the function from the string\n  my_fun &lt;- get(stat)\n  \n    # Compute the desired statistic for the 'pre', 'post', and 'diff' columns of both data frames\n  treatment_pre_stat &lt;- my_fun(treatment_df$pre_bp)\n  treatment_post_stat &lt;- my_fun(treatment_df$post_bp)\n  treatment_diff_stat &lt;- my_fun(treatment_df$diff_bp)\n  \n  placebo_pre_stat &lt;- my_fun(placebo_df$pre_bp)\n  placebo_post_stat &lt;- my_fun(placebo_df$post_bp)\n  placebo_diff_stat &lt;- my_fun(placebo_df$diff_bp)\n  \n    # Create an atomic vector with the calculated statistics\n  stat_values &lt;- c(\n    treatment_pre_stat, \n    treatment_post_stat, \n    treatment_diff_stat, \n    placebo_pre_stat, \n    placebo_post_stat, \n    placebo_diff_stat\n  )\n  \n    # Dynamically create meaningful names for the values\n  stat_names &lt;- c(\n    paste(\"treatment_pre\", stat, sep = \"_\"),\n    paste(\"treatment_post\", stat, sep = \"_\"),\n    paste(\"treatment_diff\", stat, sep = \"_\"),\n    paste(\"placebo_pre\", stat, sep = \"_\"),\n    paste(\"placebo_post\", stat, sep = \"_\"),\n    paste(\"placebo_diff\", stat, sep = \"_\")\n  )\n  \n      # Assign names to the vector\n  names(stat_values) &lt;- stat_names\n  \n  # Return the atomic vector with names\n  return(stat_values)\n}\n\n\n# Applying the function without specifying a statistic (default to \"mean\")\nresult_mean &lt;- process_statistics(my_list)\n\n# Applying the function with specifying the statistic as \"var\" (variance)\nresult_var &lt;- process_statistics(my_list, \"var\")\n\n# Applying the function with specifying the statistic as \"sd\" (standard deviation)\nresult_sd &lt;- process_statistics(my_list, \"sd\")\n\n# Applying the function with specifying the statistic as \"min\" (minimum)\nresult_min &lt;- process_statistics(my_list, \"min\")\n\n# Applying the function with specifying the statistic as \"max\" (maximum)\nresult_max &lt;- process_statistics(my_list, \"max\")\n\n# Print the results to see the statistics\nprint(result_mean)\n\n treatment_pre_mean treatment_post_mean treatment_diff_mean    placebo_pre_mean \n             131.60              125.95                5.65              131.90 \n  placebo_post_mean   placebo_diff_mean \n             128.90                3.00 \n\nprint(result_var)\n\n treatment_pre_var treatment_post_var treatment_diff_var    placebo_pre_var \n          75.72632           78.99737          117.81842          149.87778 \n  placebo_post_var   placebo_diff_var \n         124.98889          341.33333 \n\nprint(result_sd)\n\n treatment_pre_sd treatment_post_sd treatment_diff_sd    placebo_pre_sd \n         8.702087          8.888046         10.854419         12.242458 \n  placebo_post_sd   placebo_diff_sd \n        11.179843         18.475209 \n\nprint(result_min)\n\n treatment_pre_min treatment_post_min treatment_diff_min    placebo_pre_min \n               115                114                -24                114 \n  placebo_post_min   placebo_diff_min \n               105                -21 \n\nprint(result_max)\n\n treatment_pre_max treatment_post_max treatment_diff_max    placebo_pre_max \n               151                146                 21                152 \n  placebo_post_max   placebo_diff_max \n               143                 33"
  },
  {
    "objectID": "hw3_mycode_v5.html#task-1-control-flow-practice",
    "href": "hw3_mycode_v5.html#task-1-control-flow-practice",
    "title": "hw3_v5",
    "section": "",
    "text": "# hw3,  to bring in the data set\n\nload(\"hw2_list.rda\")\nhead(bp_list)\n\n$treatment\n              patient pre_bp post_bp diff_bp normal\nSubject_1   Subject_1    120     127      -7  FALSE\nSubject_2   Subject_2    151     145       6  FALSE\nSubject_3   Subject_3    125     135     -10  FALSE\nSubject_4   Subject_4    126     122       4  FALSE\nSubject_5   Subject_5    115     115       0   TRUE\nSubject_6   Subject_6    132     122      10  FALSE\nSubject_7   Subject_7    132     123       9  FALSE\nSubject_8   Subject_8    129     126       3  FALSE\nSubject_9   Subject_9    134     126       8  FALSE\nSubject_10 Subject_10    139     129      10  FALSE\nSubject_11 Subject_11    127     132      -5  FALSE\nSubject_12 Subject_12    122     146     -24  FALSE\nSubject_13 Subject_13    127     120       7  FALSE\nSubject_14 Subject_14    135     114      21   TRUE\nSubject_15 Subject_15    133     121      12  FALSE\nSubject_16 Subject_16    128     120       8  FALSE\nSubject_17 Subject_17    147     128      19  FALSE\nSubject_18 Subject_18    138     120      18  FALSE\nSubject_19 Subject_19    140     133       7  FALSE\nSubject_20 Subject_20    132     115      17   TRUE\n\n$placebo\n      patient pre_bp post_bp diff_bp normal\n1   Subject_1    138     105      33   TRUE\n2   Subject_2    135     136      -1  FALSE\n3   Subject_3    147     123      24  FALSE\n4   Subject_4    117     130     -13  FALSE\n5   Subject_5    152     134      18  FALSE\n6   Subject_6    134     143      -9  FALSE\n7   Subject_7    114     135     -21  FALSE\n8   Subject_8    121     139     -18  FALSE\n9   Subject_9    131     120      11  FALSE\n10 Subject_10    130     124       6  FALSE\n\n# add status col\nmy_list &lt;- bp_list\nmy_list$treatment$status &lt;- character(20)\nmy_list$placebo$status &lt;- character(10)\n\n\n\n\n\n# Task 1 (control flow practice)\n# use loop to fill in 'status' vector\nfor (i in 1:20) {\n  if (my_list$treatment$post_bp[i] &lt;=120) {\n    my_list$treatment$status[i] &lt;- \"optimal\"\n  } else if (my_list$treatment$post_bp[i] &lt;=130) {\n    my_list$treatment$status[i] &lt;- \"borderline\"\n  } else if (my_list$treatment$post_bp[i] &gt;130) {\n    my_list$treatment$status[i] &lt;- \"high\"\n  }\n}\n\n\n\n\n\n# use loop to fill in 'status' vector\n\nfor (i in 1:10) {\n  if (my_list$placebo$post_bp[i] &lt;=120) {\n    my_list$placebo$status[i] &lt;- \"optimal\"\n  } else if (my_list$placebo$post_bp[i] &lt;=130) {\n    my_list$placebo$status[i] &lt;- \"borderline\"\n  } else if (my_list$placebo$post_bp[i] &gt;130) {\n    my_list$placebo$status[i] &lt;- \"high\"\n  }\n}\n\n\n# show the list\nmy_list\n\n$treatment\n              patient pre_bp post_bp diff_bp normal     status\nSubject_1   Subject_1    120     127      -7  FALSE borderline\nSubject_2   Subject_2    151     145       6  FALSE       high\nSubject_3   Subject_3    125     135     -10  FALSE       high\nSubject_4   Subject_4    126     122       4  FALSE borderline\nSubject_5   Subject_5    115     115       0   TRUE    optimal\nSubject_6   Subject_6    132     122      10  FALSE borderline\nSubject_7   Subject_7    132     123       9  FALSE borderline\nSubject_8   Subject_8    129     126       3  FALSE borderline\nSubject_9   Subject_9    134     126       8  FALSE borderline\nSubject_10 Subject_10    139     129      10  FALSE borderline\nSubject_11 Subject_11    127     132      -5  FALSE       high\nSubject_12 Subject_12    122     146     -24  FALSE       high\nSubject_13 Subject_13    127     120       7  FALSE    optimal\nSubject_14 Subject_14    135     114      21   TRUE    optimal\nSubject_15 Subject_15    133     121      12  FALSE borderline\nSubject_16 Subject_16    128     120       8  FALSE    optimal\nSubject_17 Subject_17    147     128      19  FALSE borderline\nSubject_18 Subject_18    138     120      18  FALSE    optimal\nSubject_19 Subject_19    140     133       7  FALSE       high\nSubject_20 Subject_20    132     115      17   TRUE    optimal\n\n$placebo\n      patient pre_bp post_bp diff_bp normal     status\n1   Subject_1    138     105      33   TRUE    optimal\n2   Subject_2    135     136      -1  FALSE       high\n3   Subject_3    147     123      24  FALSE borderline\n4   Subject_4    117     130     -13  FALSE borderline\n5   Subject_5    152     134      18  FALSE       high\n6   Subject_6    134     143      -9  FALSE       high\n7   Subject_7    114     135     -21  FALSE       high\n8   Subject_8    121     139     -18  FALSE       high\n9   Subject_9    131     120      11  FALSE    optimal\n10 Subject_10    130     124       6  FALSE borderline"
  },
  {
    "objectID": "hw3_mycode_v5.html#task-2-function-writing",
    "href": "hw3_mycode_v5.html#task-2-function-writing",
    "title": "hw3_v5",
    "section": "",
    "text": "# define the function\nprocess_statistics &lt;- function(df_list, stat = \"mean\") {\n  # ensure the input is a list with 2 data frames\n  if (!is.list(df_list) || length(df_list) != 2) {\n    stop(\"The input must be a list containing two data frames: treatment and placebo.\")\n  }\n\n  # Extract the data frames from the list\n  treatment_df &lt;- df_list[[1]]\n  placebo_df &lt;- df_list[[2]]\n  \n    # Ensure that both elements are data frames\n  if (!is.data.frame(treatment_df) || !is.data.frame(placebo_df)) {\n    stop(\"Both elements in the list must be data frames.\")\n  }\n  \n    # Use get() to dynamically retrieve the function from the string\n  my_fun &lt;- get(stat)\n  \n    # Compute the desired statistic for the 'pre', 'post', and 'diff' columns of both data frames\n  treatment_pre_stat &lt;- my_fun(treatment_df$pre_bp)\n  treatment_post_stat &lt;- my_fun(treatment_df$post_bp)\n  treatment_diff_stat &lt;- my_fun(treatment_df$diff_bp)\n  \n  placebo_pre_stat &lt;- my_fun(placebo_df$pre_bp)\n  placebo_post_stat &lt;- my_fun(placebo_df$post_bp)\n  placebo_diff_stat &lt;- my_fun(placebo_df$diff_bp)\n  \n    # Create an atomic vector with the calculated statistics\n  stat_values &lt;- c(\n    treatment_pre_stat, \n    treatment_post_stat, \n    treatment_diff_stat, \n    placebo_pre_stat, \n    placebo_post_stat, \n    placebo_diff_stat\n  )\n  \n    # Dynamically create meaningful names for the values\n  stat_names &lt;- c(\n    paste(\"treatment_pre\", stat, sep = \"_\"),\n    paste(\"treatment_post\", stat, sep = \"_\"),\n    paste(\"treatment_diff\", stat, sep = \"_\"),\n    paste(\"placebo_pre\", stat, sep = \"_\"),\n    paste(\"placebo_post\", stat, sep = \"_\"),\n    paste(\"placebo_diff\", stat, sep = \"_\")\n  )\n  \n      # Assign names to the vector\n  names(stat_values) &lt;- stat_names\n  \n  # Return the atomic vector with names\n  return(stat_values)\n}\n\n\n# Applying the function without specifying a statistic (default to \"mean\")\nresult_mean &lt;- process_statistics(my_list)\n\n# Applying the function with specifying the statistic as \"var\" (variance)\nresult_var &lt;- process_statistics(my_list, \"var\")\n\n# Applying the function with specifying the statistic as \"sd\" (standard deviation)\nresult_sd &lt;- process_statistics(my_list, \"sd\")\n\n# Applying the function with specifying the statistic as \"min\" (minimum)\nresult_min &lt;- process_statistics(my_list, \"min\")\n\n# Applying the function with specifying the statistic as \"max\" (maximum)\nresult_max &lt;- process_statistics(my_list, \"max\")\n\n# Print the results to see the statistics\nprint(result_mean)\n\n treatment_pre_mean treatment_post_mean treatment_diff_mean    placebo_pre_mean \n             131.60              125.95                5.65              131.90 \n  placebo_post_mean   placebo_diff_mean \n             128.90                3.00 \n\nprint(result_var)\n\n treatment_pre_var treatment_post_var treatment_diff_var    placebo_pre_var \n          75.72632           78.99737          117.81842          149.87778 \n  placebo_post_var   placebo_diff_var \n         124.98889          341.33333 \n\nprint(result_sd)\n\n treatment_pre_sd treatment_post_sd treatment_diff_sd    placebo_pre_sd \n         8.702087          8.888046         10.854419         12.242458 \n  placebo_post_sd   placebo_diff_sd \n        11.179843         18.475209 \n\nprint(result_min)\n\n treatment_pre_min treatment_post_min treatment_diff_min    placebo_pre_min \n               115                114                -24                114 \n  placebo_post_min   placebo_diff_min \n               105                -21 \n\nprint(result_max)\n\n treatment_pre_max treatment_post_max treatment_diff_max    placebo_pre_max \n               151                146                 21                152 \n  placebo_post_max   placebo_diff_max \n               143                 33"
  }
]